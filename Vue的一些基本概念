1. vue做了什么
	我们来阅读JavaScript代码，会发现创建了一个Vue对象。
	创建Vue对象的时候，传入了一些options：{}
	{}中包含了el属性：该属性决定了这个Vue对象挂载到哪一个元素上
	{}中包含了data属性：该属性中通常会存储一些数据
	这些数据可以是我们直接定义出来的，也可能是来自网络，从服务器加载的

2. Vue中的MVVM
	2.1 View层
		视图层
		在我们前端开发中，通常就是DOM层。
		主要的作用是给用户展示各种信息。
	2.2 Model层
		数据层
		数据可能是我们固定的死数据，更多的是来自我们服务器，从网络上请求下来的数据。
		在我们计数器的案例中，就是后面抽取出来的obj，当然，里面的数据可能没有这么简单。
	2.3 VueModel层
		视图模型层
		视图模型层是View和Model沟通的桥梁。
		一方面它实现了Data Binding，也就是数据绑定，将Model的改变实时的反应到View中
		另一方面它实现了DOM Listener，也就是DOM监听，当DOM发生一些事件(点击、滚动、touch等)时，可以监听到，并在需要的情况下改变对应的Data。

3. 创建Vue实例传入的options
	目前掌握这些选项：
		el: 
		类型：string | HTMLElement
		作用：决定之后Vue实例会管理哪一个DOM。
		data: 
		类型：Object | Function （组件当中data必须是一个函数）
		作用：Vue实例对应的数据对象。
		methods: 
		类型：{ [key: string]: Function }
		作用：定义属于Vue的一些方法，可以在其他地方调用，也可以在指令中使用
